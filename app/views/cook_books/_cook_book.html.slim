- recipes = cook_book.recipes_visible_for_user(current_user)
article.relative.my-3.w-full.lg:w-1/2.2xl:w-1/3.cook-book
  .mx-3.px-4.py-5.bg-white.shadow-lg.rounded-lg.flex.flex-col.items-center.text-center.h-full
    = link_to cook_book.title, cook_book_path(cook_book), class: "text-lg font-semibold text-black break-all hover:opacity-75"
    .italic
      = link_to cook_book.user.username, user_path(cook_book.user), class: "hover:opacity-75"
    .flex.w-full.space-x-4.mt-2
      - recipes[0..2].each do |recipe|
        .flex-grow.flex.justify-center
          = link_to image_tag("/images/default_recipe.png", class: "rounded-2xl object-cover h-24 w-auto transition-opacity opacity-75 hover:opacity-100", alt: ""), recipe_path(recipe)
    .text-gray-700.text-lg.px-16.mt-4
      = cook_book_recipes_text(recipes)
  .absolute.top-0.right-0.mr-4.mt-2
    - if authorize_cook_book_dropdown?(cook_book)
      input.drop-btn-hidden type="radio" name="dropdown" id="dropdown_cook_book#{cook_book.id}"
      .dropdown
        .mx-2
          button type="button" onclick="uncheckDropdown('dropdown_cook_book#{cook_book.id}')"
            .drop-btn
              = render "shared/dots_vertical"
        .drop-menu tabindex="-1"
          = link_to t("cook_books.edit.action"), edit_cook_book_path(cook_book), class: "drop-item", tab_index: "-1"
          - if cook_book.visibility != :favourite
            = link_to t("cook_books.destroy.action"), cook_book_path(cook_book), method: :delete, data: {confirm: t("confirm")}, class: "drop-item", tab_index: "-1"
